<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OSPF</title>
      <link href="/2023/01/07/ospf/"/>
      <url>/2023/01/07/ospf/</url>
      
        <content type="html"><![CDATA[<p>##【OSPF的两个选举】<br>1.RID：表示OSPF的路由器<br>    1.1规则：手工指定和自动选举→选举具有非抢占性<br>        非抢占性：RID不会因为后面先加入接口所影响，要变更RID要刷新OSPF的进程<br>        a.在路由进程下直接指定OSPF路由器的RID<br>            R1(config-router)#router-id 2.2.2.2<br>        b.如果有环回口，取IP地址最大，无，则取物理接口IP地址最大<br>2.DR与BDR：指定路由器和备份指定路由器<br>    2.1作用：DRother与DR和BDR建立邻接关系，DRothers数据发送DR和BDR，由DR负责转发，当DR失效，启用BDR<br>    2.2选举规则：优先级和RID→具有非抢占性（刷新选举区域的OSPF进程）<br>        a.默认以太网环境接口优先级为1，串行链路接口默认优先级为0，优先级0代表没有资格参与选举，串行链路不要选举DR和BDR<br>        b.优先级相同的情况下，比较RID，大的为DR<br>    2.3 DR和BDR的概念是路由器的接口不是路由器</p><p>##【OSPF的三张表】<br>1.邻居表：存放邻居信息<br>2.拓扑表：存放DBD的link-id，是区域内同步<br>3.路由表：存放最优路由<br>    3.1 区域间的路由信息<br>        O IA  192.168.234.0/24 [110/20] via 192.168.12.2, 00:31:29, Ethernet0/1<br>        O IA：代表的是其他OSPF区域的路由信息<br>    3.2 区域外路由信息<br>        O E2     6.6.6.0 [110/20] via 192.168.234.2, 00:19:48, Ethernet0/0<br>        O E1     6.6.6.0 [110/40] via 192.168.234.2, 00:00:03, Ethernet0/0<br>        OE1/2：代表的是非OSPF的路由信息<br>    3.3 OE1/2区别<br>        在开销上，OE2默认非OSPF的路由开销都是20，OE1的开销是20+到达ASBR的开销；<br>    3.4 不同OSPF路由类型的选路优先级<br>        ①Ｏ<br>        ②Ｏ IA<br>        ③O E1<br>        ④O E2<br>        从上到下优先级越低</p><p>#【OSPF的五个报文】<br>    1.hello:发现、建立、维持邻居关系，周期为10S（40S）<br>        a.参数的匹配：区域号，hello-time以及dead-time、身份验证、网络类型等等<br>    2.DBD:数据库摘要<br>        a.i位：初始位代表一个DBD报文，置为1<br>        b.M位：还不是最后一个DBD报文，置为1<br>        c.MS位：“主”路由器置为1，刚开始该为都为1，RID大的为“主”<br>        d.DBD序列号<br>    3.LSR：请求相应的链路信息<br>    4.LSU：对请求进行详细的回应<br>    5.LSACK：对回应的确认，显示确认（以LSACK确认）和隐式确认（发送一份拷贝的LSU）<br>    LSA的老化时间，最大时间是1h，30分钟发送一次完整的更新<br>    注意：LSA不是OSPF的具体的报文，只是一个统称</p><p>#【OSPF的七个状态机】<br>    1.down：没有发现OSPF的hello包<br>    2.init：收到OSPF的hello包<br>    3. 2-way：在邻居发送的hello包中，发现自己RID则进入此状态（邻接状态），进行DR和BDR选举<br>        DRother→BDR→DR<br>    4.exstart：“主从”关系选举<br>    5.exchange：交互DBD<br>    6.loading：进行LSR和LSU报文交互以及SPF算法<br>    7.full：完全邻接状态</p><p>#【OSPF的LSA类型】<br>    1.1类LSA：路由器LSA，通告本台设备接口的相关信息，每台设备都会通告1类LSA，泛洪只能在本区域内，不能跨区域<br>        查看：R1#show ip ospf database router<br>    2.2类LSA：网络LSA，始发者是DR，通告所连接的网段以及设备，泛洪只能在本区域内，不能跨区域<br>        查看：R1#show ip ospf database network<br>        注意：2类LSA不一定存在，点对点环境就不存在2类LSA<br>    3.3类LSA：网络汇总LSA，始发者是ABR（区域边界路由器），通告的是其他OSPF区域的路由信息，ABR是将其他区域的路由通过网段以及开销的形式告诉给其他区域（距离矢量路由协议的特征）<br>        查看：R1#show ip ospf database summary<br>    4.4类LSA：ASBR汇总LSA，始发者是ABR，通告的是ASBR的位置，泛洪区域为OSPF区域<br>        查看：R4#show ip ospf database asbr-summary<br>    5.5类LSA：外部LSA，始发者是ASBR，通告的是非OSPF区域的路由信息，泛洪区域为OSPF区域<br>        查看：R4#show ip ospf database external </p><p>##【OSPF的网络类型】<br>    1.广播多路访问（BROADCAST）：需要选举DR和BDR<br>    2.点对点：串行链路不需要选举DR和BDR<br>        注意：网络类型不一致，可能导致邻居正常但是路由表不正常<br>    3.非广播多路访问：此网络类型不具备广播功能，需要手工指定邻居，邻居需要单播进行，还是需要选举DR和BDR，时间上，hello变为30S，deadtime变为120S<br>        ATTEMPT：尝试状态，尝试建立邻居<br>        R1(config)#router ospf 110<br>        R1(config-router)#neighbor 192.168.12.2→手工指定邻居<br>    4.点对多点：就是点对点链路的集合，不需要选举DR和BDR<br>    （1）更改OSPF的网络类型→接口下<br>        R2(config)#int e0/0<br>        R2(config-if)#ip ospf network ?<br>        broadcast<br>        non-broadcast<br>        point-to-multipoint<br>        point-to-point<br>    注意：OSPF的环回口在通告的时候掩码是/32<br>    需求：要使OSPF的邻居实现快速收敛，要做什么？<br>    就是将网络类型改为点对点→不需要选举DR和BDR</p><p>##【OSPF的区域以及区域不连续】<br>    1.区域：OSPF网络环境存在多个区域，分为骨干区域（AREA 0）以及非骨干区域（非AREA 0）区域的表示可以采用点分十进制也可以直接标号<br>    2.特点： LSDB是区域内同步，通过每个区域维护自己的LSDB，精简LSDB的大小，节约设备的资源，降低了LSA的泛洪范围<br>    3.区域的要求<br>        a.骨干区域要求连续<br>        b.非骨干区域与骨干区域相连→域间路由是通过３类LSA产生<br>    4.角色<br>        ABR：连接骨干区域和非骨干区域的OSPF路由器（至少要有一个接口通告进AREA0）<br>        ASBR：连接OSPF区域以及非OSPF区域的OSPF路由器<br>    5.解决区域不连续的问题<br>        5.1虚链路→网络类型与P2P相似，不需要选举DR和BDR<br>            R3(config)#router ospf 110<br>            R3(config-router)#area 1 virtual-link 2.2.2.2→区域代表的是你要透传的区域，IP地址是邻居的RID<br>            R3(config-router)#area 1 virtual-link 4.4.4.4<br>        5.2隧道（GRE）→隧道的头尾IP进行连接，不关心设备的数量，只关心连通性，网络类型为P2P<br>            R5(config)#interface tunnel 1   //创建隧道1<br>            R5(config-if)#ip add 192.168.25.5 255.255.255.0//分配IP地址<br>            R5(config-if)#no sh<br>            R5(config-if)#tunnel source 192.168.45.5//隧道的源IP<br>            R5(config-if)#tunnel destination 192.168.23.2//隧道的目的IP<br>            R5(config-if)#ip ospf 110 a 0 //虽然不是在骨干区域做隧道，但是隧道窑通告进骨干区域</p><p>##【OSPF的路由汇总】<br>    1.作用：精简路由表的条目，OSPF的路由汇总针对3类LSA以及5类LSA，降低LSA的条目<br>    2.配置<br>        2.1区域间汇总<br>            汇总是在产生3类LSA的ABR上做并且也会产生null0路由，并不是在源头设备上配置，area 0表示的是对区域0的路由汇总<br>            R2(config-router)#area 0 range 172.16.0.0 255.255.0.0<br>        2.2区域外的汇总<br>            汇总的是5类LSA，配置在ASBR上，同样也会产生null0路由<br>            R1(config-router)#summary-address 192.168.0.0 255.255.0.0</p><pre><code>##【OSPF的默认路由下发】1.作用：在边界网关上主动下发一条默认路由进OSPF的区域2.1进程下发    a.R1(config-router)#default-information originate         可选参数        metric-type 1→将默认路由类型更改为O*E1        metric→更改默认路由的开销        O*E2  0.0.0.0/0 [110/1] via 192.168.234.2, 00:00:07, Ethernet0/0        其他设备收到的路由类型为O*E2        注意：要求本地要有默认路由，如果没有默认路由下发不生效    b.R1(config-router)#default-information originate always         不管本地是否有默认路由，都强制下发        2.2重分布→将静态路由重分布进OSPF    R1(config-router)#redistribute static subnets</code></pre><p>##【OSPF的特殊区域】<br>    1.区域的类型<br>        （1）末梢区域（stub）：删除4类、5类LSA，由ABR下发一条默认路由，stub的属性是两台OSPF邻居建立的参数之一<br>            配置：整个AREA 2区域都需要配置stub<br>                R5(config)#router ospf 110<br>                R5(config-router)#area 2 stub<br>            现象：<br>                路由表上：O*IA  0.0.0.0/0 [110/11] via 192.168.35.3, 00:00:05, Ethernet0/0→由ABR产生一条3类的默认路由取代4、5类LSA<br>                整个区域的拓扑表上没有4、5类的LSA，在3类LSA多了一条全0路由<br>            注意：<br>                ①该区域没有ASBR<br>                ②该区域不能使骨干区域<br>                ③该区域不能存在虚链路<br>        （2）完全末梢区域（totally-stub），删除3类、4类、5类LSA，由ABR下发一条默认路由<br>                配置：只需要在ABR上配置即可<br>                R3(config-router)#area 2 stub no-summary<br>        （3）非完全末梢区域（NSSA）：该区域可以存在ASBR，删除4类、5类LSA，但是NSSA区域的ASBR会将5类LSA转换成7类LSA（实质上还是OSPF外部区域信息），7类会在ABR上重新转换回5类LSA，通告进OSPF的其他区域<br>                配置：整个AREA 1区域都需要配置NSSA（跟邻居建立有关）<br>                    R1(config-router)#area 1 nssa<br>                现象：<br>                ①路由表上：O N2     172.16.2.0 [110/20] via 192.168.12.1, 00:00:11, Ethernet0/0→如果是7类LSA，则外部路由在路由表中以O N2（实质上就是O E2）表示，同样也可以改为O N1（O E1）类型，O N1和O N2的差别与O E2和O E1一样，修改类型在重分布上做<br>                ②拓扑上出现→Type-7 AS External Link States<br>        （4）完全非完全末梢区域（totally-NSSA）该区域可以存在ASBR，删除3类，4类、5类LSA<br>            配置：<br>                R2(config-router)#area 1 nssa no-summary<br>                R2(config-router)#area 1 default-cost 10→将默认路由的开销修改为10（默认的开销是1）<br>            现象：在拓扑上，3类LSA以一条全0的路由表示<br>    2、作用：简化LSDB的条目，降低设备的内存消耗</p><p>##【OSPF的身份验证】<br>    1.防止恶意更新源的恶意通告<br>    2.加密方式<br>        ①明文<br>            a.接口下配置<br>                R5(config-if)#ip ospf authentication       //启用认证<br>                R5(config-if)#ip ospf authentication-key cisco //设置密码<br>            b.进程下配置<br>                R5(config-router)#area 2 authentication  //区域2启用认证<br>                R5(config-if)#ip ospf authentication-key cisco //设置密码<br>        ②密文（MD5）<br>            a.接口下配置<br>                R1(config-if)#ip ospf authentication message-digest<br>                R1(config-if)#ip ospf message-digest-key 1 md5 cisco<br>            b.进程下配置<br>                R1(config-router)#area 1 authentication message-digest<br>                R1(config-if)#ip ospf message-digest-key 1 md5 cisco<br>    虚链路的身份验证<br>    R5(config-router)#area 1 authentication<br>    R1(config-router)#area 1 virtual-link 3.3.3.3 authentication-key cisco</p><p>##【OSPF的被动接口】<br>    1.作用：被动接口一般使用在连接主机或者loopback口上（没有OSPF的邻居），不发送HELLO报文<br>    2.配置：<br>        R1(config-router)#passive-interface e0/1<br>        R1(config-router)#passive-interface default→将所有接口变为被动接口<br>        R1(config-router)#no passive-interface e0/1→将e0/1变成主动接口</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/07/hello-world/"/>
      <url>/2023/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
